@book{Alexandrescu,
    author = {Alexandrescu, Andrei},
    citeulike-article-id = {602596},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0201704315},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0201704315},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0201704315},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201704315},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201704315/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201704315},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201704315},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201704315},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201704315\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201704315},
    day = {13},
    howpublished = {Paperback},
    isbn = {0201704315},
    keywords = {cpp, design, generic, metaprogramming, patterns, programming, template},
    month = feb,
    posted-at = {2008-02-28 15:29:39},
    priority = {0},
    publisher = {{Addison-Wesley Professional}},
    title = {{Modern C++ Design: Generic Programming and Design Patterns Applied}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201704315},
    year = {2001}
}

@MISC{Drepper,
    author = {Drepper, U.},
    title = {What Every Programmer Should Know About Memory},
    year = {2007}
}

@book{EffCpp,
 author = {Meyers, S.},
 title = {Effective C++},
 year = {2004},
 publisher = {Addison-Wesley},
}

@book{CppIntro,
 author = {Strourstrup, B.},
 title = {The C++ Programming Language},
 year = {1985},
 publisher = {Addison-Wesley},
}

@book{Thinking,
 author = {Eckel, B.},
 title = {Thinking in C++},
 year = {},
 publisher = {Prentice Hall PTR},
}

@book{IntroAlgorithms,
    abstract = {{Aimed at any serious programmer or computer science student, the new second edition of <I>Introduction to Algorithms</I> builds on the tradition of the original with a truly magisterial guide to the world of algorithms. Clearly presented, mathematically rigorous, and yet approachable even for the math-averse, this title sets a high standard for a textbook and reference to the best algorithms for solving a wide range of computing problems.<p>With sample problems and mathematical proofs demonstrating the correctness of each algorithm, this book is ideal as a textbook for classroom study, but its reach doesn't end there. The authors do a fine job of explaining each algorithm. (Reference sections on basic mathematical notation will help readers bridge the gap, but it will help to have some math background to appreciate the full achievement of this handsome hardcover volume.) Every algorithm is presented in pseudo-code, which can be implemented in any computer language, including C/C++ and Java. This ecumenical approach is one of the book's strengths. When it comes to sorting and common data structures, from basic linked lists to trees (including binary trees, red-black, and B-trees), this title really shines, with clear diagrams that show algorithms in operation. Even if you just glance over the mathematical notation here, you can definitely benefit from this text in other ways.<p>The book moves forward with more advanced algorithms that implement strategies for solving more complicated problems (including dynamic programming techniques, greedy algorithms, and amortized analysis). Algorithms for graphing problems (used in such real-world business problems as optimizing flight schedules or flow through pipelines) come next. In each case, the authors provide the best from current research in each topic, along with sample solutions.<p>This text closes with a grab bag of useful algorithms including matrix operations and linear programming, evaluating polynomials, and the well-known Fast Fourier Transformation (FFT) (useful in signal processing and engineering). Final sections on "NP-complete" problems, like the well-known traveling salesman problem, show off that while not all problems have a demonstrably final and best answer, algorithms that generate acceptable approximate solutions can still be used to generate useful, real-world answers.<p>Throughout this text, the authors anchor their discussion of algorithms with current examples drawn from molecular biology (like the Human Genome Project), business, and engineering. Each section ends with short discussions of related historical material, often discussing original research in each area of algorithms. On the whole, they argue successfully that algorithms are a "technology" just like hardware and software that can be used to write better software that does more, with better performance. Along with classic books on algorithms (like Donald Knuth's three-volume set, <I>The Art of Computer Programming</I>), this title sets a new standard for compiling the best research in algorithms. For any experienced developer, regardless of their chosen language, this text deserves a close look for extending the range and performance of real-world software. <I>--Richard Dragan</I> <p> <B>Topics covered:</B> Overview of algorithms (including algorithms as a technology); designing and analyzing algorithms; asymptotic notation; recurrences and recursion; probabilistic analysis and randomized algorithms; heapsort algorithms; priority queues; quicksort algorithms; linear time sorting (including radix and bucket sort); medians and order statistics (including minimum and maximum); introduction to data structures (stacks, queues, linked lists, and rooted trees); hash tables (including hash functions); binary search trees; red-black trees; augmenting data structures for custom applications; dynamic programming explained (including assembly-line scheduling, matrix-chain multiplication, and optimal binary search trees); greedy algorithms (including Huffman codes and task-scheduling problems); amortized analysis (the accounting and potential methods); advanced data structures (including B-trees, binomial and Fibonacci heaps, representing disjoint sets in data structures); graph algorithms (representing graphs, minimum spanning trees, single-source shortest paths, all-pairs shortest paths, and maximum flow algorithms); sorting networks; matrix operations; linear programming (standard and slack forms); polynomials and the Fast Fourier Transformation (FFT); number theoretic algorithms (including greatest common divisor, modular arithmetic, the Chinese remainder theorem, RSA public-key encryption, primality testing, integer factorization); string matching; computational geometry (including finding the convex hull); NP-completeness (including sample real-world NP-complete problems and their insolvability); approximation algorithms for NP-complete problems (including the traveling salesman problem); reference sections for summations and other mathematical notation, sets, relations, functions, graphs and trees, as well as counting and probability backgrounder (plus geometric and binomial distributions).}},
    author = {Cormen, T.H. and Leiserson, C.E. and Rivest, R.L. and Stein, C.},
    booktitle = {Introduction to Algorithms, Second Edition},
    day = {01},
    edition = {2nd},
    howpublished = {Hardcover},
    isbn = {0262032937},
    keywords = {algorithms, applied-mathematic, text-book},
    month = sep,
    posted-at = {2012-05-15 10:13:54},
    priority = {3},
    publisher = {The MIT Press},
    title = {{Introduction to Algorithms, Second Edition}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0262032937},
    year = {2001}
}

@book{ElementsStatisticalLearning,
    abstract = {{During the past decade there has been an explosion in computation and information technology. With it has come vast amounts of data in a variety of fields such as medicine, biology, finance, and marketing. The challenge of understanding these data has led to the development of new tools in the field of statistics, and spawned new areas such as data mining, machine learning, and bioinformatics. Many of these tools have common underpinnings but are often expressed with different terminology. This book descibes theimprtant ideas in these areas ina common conceptual framework. While the approach is statistical, the emphasis is on concepts rather than mathematics. Many examples are given, with a liberal use of color graphics. It should be a vluable resource for statisticians and anyone interested in data mining in science or industry. The book's coverage is broad, from supervised learing (prediction) to unsupervised learning. The many topics include neural networks, support vector machines, classification trees and boosting--the first comprehensive treatment of this topic in any book. Trevor Hastie, Robert Tibshirani, and Jerome Friedman are professors of statistics at Stanford University. They are prominent researchers in this area: Hastie and Tibshirani developed generalized additive models and wrote a popular book of that title. Hastie wrote much of the statistical modeling software in S-PLUS and invented principal curves and surfaces. Tibshirani proposed the Lasso and is co-author of the very successful An Introduction to the Bootstrap. Friedman is the co-inventor of many data-mining tools including CART, MARS, and projection pursuit.}},
    author = {Hastie, T. and Tibshirani, R. and Friedman, J.},
    booktitle = {The Elements of Statistical Learning},
    day = {30},
    edition = {Corrected},
    howpublished = {Hardcover},
    isbn = {0387952845},
    keywords = {learning},
    month = aug,
    posted-at = {2010-04-07 20:24:29},
    priority = {2},
    publisher = {Springer},
    title = {{The Elements of Statistical Learning: Data Mining, Inference, and Prediction}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0387952845},
    year = {2003}
}

@book{CudaByExample,
 author = {Sanders, J. and Kandrot, E.},
 title = {CUDA by Example: An Introduction to General-Purpose GPU Programming},
 year = {2010},
 isbn = {0131387685, 9780131387683},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
}

@article{ThreadsCannotBeImplementedAsALibrary,
 author = {Boehm, H.J.},
 title = {Threads cannot be implemented as a library},
 journal = {SIGPLAN Not.},
 issue_date = {June 2005},
 volume = {40},
 number = {6},
 month = jun,
 year = {2005},
 issn = {0362-1340},
 pages = {261--268},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1064978.1065042},
 doi = {10.1145/1064978.1065042},
 acmid = {1065042},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data race, optimization, pthreads, register promotion, threads},
}

@book{DragonBook,
 author = {Aho, A. and Lam, M. and Sethi, R. and Ullman, J.},
 title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
 year = {2006},
 isbn = {0321486811},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{ContinuousIntegration,
 author = {Duvall, P. and Matyas, S. and Glover, A.},
 title = {Continuous integration: improving software quality and reducing risk},
 year = {2007},
 isbn = {9780321336385},
 edition = {First},
 publisher = {Addison-Wesley Professional},
}

@book{ProGit,
 author = {Chacon, S.},
 title = {Pro Git},
 year = {2009},
 isbn = {1430218339, 9781430218333},
 edition = {1st},
 publisher = {Apress},
 address = {Berkely, CA, USA},
}

@book{Subversion,
 author = {Fitzpatrick, B. and Collins-Sussman, B. and Pilato, C.M.},
 title = {Gestion de projets avec Subversion},
 year = {2004},
 publisher = {O'Reilly}
}

@book{AMP,
 author = {Herlihy, M. and Shavit, N.},
 title = {The Art of Multiprocessor Programming},
 year = {2008},
 isbn = {0123705916, 9780123705914},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}

@book{DesignPatterns,
 author = {Gamma, E. and Helm, R. and Johnson, R. and Vlissides, J.},
 title = {Design patterns: elements of reusable object-oriented software},
 year = {1995},
 isbn = {            0-201-63361-2      },
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{MoreJoel,
 author = {Spolsky, J.},
 title = {More Joel on Software: Further Thoughts on Diverse and Occasionally Related Matters That Will Prove of Interest to Software Developers, Designers, and ... Luck, Work with Them in Some Capacity},
 year = {2008},
 isbn = {1430209879, 9781430209874},
 edition = {1},
 publisher = {Apress},
 address = {Berkely, CA, USA},
}

@book{JoelOnSoftware,
 author = {Spolsky, J.},
 title = {Joel on Software: Selected Essays},
 year = {2004},
 isbn = {1590593898},
 publisher = {APress},
}

@book{Joshi,
 author = {Joshi, M. S.},
 title = {C++ Design Patterns and Derivatives Pricing},
 year = {2008},
 isbn = {0521721628},
 edition = {2nd},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@book{Boost1,
 author = {Schling, B.},
 title = {The Boost C++ Libraries},
 year = {2011},
 isbn = {0982219199, 9780982219195},
 publisher = {XML Press},
}

@book{Boost2,
 author = {Demming, R. and Duffy, D.J.},
 title = {Introduction to the Boost C++ Libraries; Volume I - Foundations},
 year = {2010},
 isbn = {9491028014, 9789491028014},
 publisher = {Datasim Education BV},
 address = {The Netherlands},
}

@book{CombinatorialOptimization,
 author = {Korte, B. and Vygen, J.},
 title = {Combinatorial Optimization: Theory and Algorithms},
 year = {2012},
 isbn = {3642244874, 9783642244872},
 edition = {5th},
 publisher = {Springer Publishing Company, Incorporated},
}

@misc{StackOverflow,
    author = {Spalsky, J. and Atwood, J.},
    note = {\url{http://www.codinghorror.com}}
}

@book{MetaProgramming,
 author = {Abrahams, D. and Gurtovoy, A.},
 title = {C++ Template Metaprogramming: Concepts, Tools, and Techniques from Boost and Beyond (C++ in Depth Series)},
 year = {2004},
 isbn = {0321227255},
 publisher = {Addison-Wesley Professional},
}
