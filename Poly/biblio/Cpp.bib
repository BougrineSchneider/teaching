@book{Alexandrescu,
    author = {Alexandrescu, Andrei},
    citeulike-article-id = {602596},
    day = {13},
    howpublished = {Paperback},
    isbn = {0201704315},
    keywords = {cpp, design, generic, metaprogramming, patterns, programming, template},
    month = feb,
    posted-at = {2008-02-28 15:29:39},
    priority = {0},
    publisher = {{Addison-Wesley Professional}},
    title = {{Modern C++ Design: Generic Programming and Design Patterns Applied}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201704315},
    year = {2001}
}

@MISC{Drepper,
    author = {Drepper, U.},
    title = {What Every Programmer Should Know About Memory},
    year = {2007}
}

@MISC{Lippman,
    author = {Lippman, S.},
    title = {Why C++ Supports both Class and Typename for Type Parameters},
    note = {\url{http://blogs.msdn.com/b/slippman/archive/2004/08/11/212768.aspx}},
}

@book{EffCpp,
 author = {Meyers, S.},
 title = {Effective C++},
 year = {2004},
 publisher = {Addison-Wesley},
}

@book{CppIntro,
    abstract = {{In this brand-new third edition of <I>The C++ Programming Language</I>, author Bjarne Stroustrup, the creator of C++, presents the full specification for the C++ language and standard library, a spec that will soon become the joint ISO/ANSI C++ standard.<p> Past readers will find that the new edition has changed a great deal and grown considerably to encompass new language features, particularly run-time type identification, namespaces, and the standard library. At the same time, readers will recognize the lucid style and sensible advice that made previous editions so readable and enjoyable. Probably the biggest change is a substantial new section, well over 200 pages in length, covering the contents and design of the C++ standard library, the most important new feature of the C++ specification. The author has also added a substantial number of new exercises while keeping many from previous editions that have retained their value.<p> While <I>The C++ Programming Language</I> is not a C++ tutorial, strictly speaking, anyone learning the language, especially those coming from C, will greatly benefit from the clear presentation of all its elements. It is impossible to overstate the importance of this book for anyone who is serious about using C++. com/\~{}bs/) have been added. The result is complete, authoritative coverage of the C++ language, its standard library, and key design techniques. Based on the ANSI/ISO C++ standard, The C++ Programming Language provides current and comprehensive coverage of all C++ language features and standard library components. <P>For example: <P>abstract classes as interfaces class hierarchies for object-oriented programming templates as the basis for type-safe generic software exceptions for regular error handling namespaces for modularity in large-scale software run-time type identification for loosely coupled systems the C subset of C++ for C compatibility and system-level work standard containers and algorithms standard strings, I/O streams, and numerics C compatibility, internationalization, and exception safety <P>Bjarne Stroustrup makes C++ even more accessible to those new to the language, while adding advanced information and techniques that even expert C++ programmers will find invaluable.}},
    author = {Stroustrup, B.},
    citeulike-article-id = {1120270},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0201700735},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0201700735},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0201700735},
    citeulike-linkout-3 = {http://www.amazon.jp/exec/obidos/ASIN/0201700735},
    citeulike-linkout-4 = {http://www.amazon.co.uk/exec/obidos/ASIN/0201700735/citeulike00-21},
    citeulike-linkout-5 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201700735},
    citeulike-linkout-6 = {http://www.worldcat.org/isbn/0201700735},
    citeulike-linkout-7 = {http://books.google.com/books?vid=ISBN0201700735},
    citeulike-linkout-8 = {http://www.amazon.com/gp/search?keywords=0201700735\&index=books\&linkCode=qs},
    citeulike-linkout-9 = {http://www.librarything.com/isbn/0201700735},
    day = {01},
    edition = {Third},
    howpublished = {Hardcover},
    isbn = {0201700735},
    keywords = {cxx, language, metaprogramming, programming, stl, template},
    month = feb,
    posted-at = {2007-12-06 08:55:40},
    priority = {2},
    publisher = {Addison-Wesley Professional},
    title = {{The C++ Programming Language}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0201700735},
    year = {2000}
}

@book{Thinking,
    abstract = {{Fully revised and beefed up with plenty of new material on today's Standard C++, the new edition of Bruce Eckel's <I>Thinking in C++: Volume I</I> is an excellent tutorial to mastering this rich (and sometimes daunting) programming language, filled with expert advice and written in a patient, knowledgeable style.<p> The effective presentation, along with dozens of helpful code examples, make this book a standout. The text first sets the stage for using C++ with a tour of what object-oriented programming is all about, as well as the software design life cycle. The author then delves into every aspect of C++, from basic keywords and programming principles to more advanced topics, like function and operator overloading, virtual inheritance, exception handling, namespaces, and templates. C++ is a complex language, and the author covers a lot of ground using today's Standard C++, but without getting bogged down in excessive detail. <p> The emphasis here is on practical programming, so there's basic advice on using header files, preprocessor directives, and namespaces to organize code effectively. Each chapter ends with exercises (usually about two dozen), and the entire text of the book is available on the accompanying CD-ROM. (So is the second volume, which tours Standard C++ classes and other advanced topics.)<p> Whether you have read the first edition of this book or not, there is much to mine from <I>Thinking in C++</I>. This new version continues to set a high standard as an approachable and thorough tutorial. <I>--Richard Dragan</I><p> <B>Topics covered</B>: Introduction to objects, inheritance, composition, polymorphism, exception handling, analysis and design fundamentals, advantages of C++, transitioning from C, compiling and building programs, writing C++ functions, flow control, C++ operators, data types, casting, debugging tips, pointers to functions, designing reusable C++ classes, conditional compilation and header files, access specifiers, constructors and destructors, function overloading and default arguments, using <I>const</I> and <I>static</I> effectively, inlining, namespaces, references, copy constructors, operator overloading, using <I>new</I> and <I>delete</I> for dynamic objects, virtual functions, abstract classes, introduction to templates, and iterators.} {A thorough rewrite of the first edition reflect- ing all of the changes  introduced in C++ by the finalization of the C++ Standard. Softcover.  }},
    author = {Eckel, B.},
    citeulike-article-id = {546881},
    citeulike-linkout-0 = {http://www.amazon.ca/exec/obidos/redirect?tag=citeulike09-20\&amp;path=ASIN/0139798099},
    citeulike-linkout-1 = {http://www.amazon.de/exec/obidos/redirect?tag=citeulike01-21\&amp;path=ASIN/0139798099},
    citeulike-linkout-2 = {http://www.amazon.fr/exec/obidos/redirect?tag=citeulike06-21\&amp;path=ASIN/0139798099},
    citeulike-linkout-3 = {http://www.amazon.co.uk/exec/obidos/ASIN/0139798099/citeulike00-21},
    citeulike-linkout-4 = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0139798099},
    citeulike-linkout-5 = {http://www.worldcat.org/isbn/0139798099},
    citeulike-linkout-6 = {http://books.google.com/books?vid=ISBN0139798099},
    citeulike-linkout-7 = {http://www.amazon.com/gp/search?keywords=0139798099\&index=books\&linkCode=qs},
    citeulike-linkout-8 = {http://www.librarything.com/isbn/0139798099},
    day = {15},
    howpublished = {Paperback},
    isbn = {0139798099},
    keywords = {lab\_library},
    month = apr,
    posted-at = {2006-03-10 20:53:04},
    priority = {2},
    publisher = {{Prentice Hall}},
    title = {{Thinking in C++, Volume 1: Introduction to Standard C++ (2nd Edition)}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0139798099},
    year = {2000}
}

@book{IntroAlgorithms,
    abstract = {{Aimed at any serious programmer or computer science student, the new second edition of <I>Introduction to Algorithms</I> builds on the tradition of the original with a truly magisterial guide to the world of algorithms. Clearly presented, mathematically rigorous, and yet approachable even for the math-averse, this title sets a high standard for a textbook and reference to the best algorithms for solving a wide range of computing problems.<p>With sample problems and mathematical proofs demonstrating the correctness of each algorithm, this book is ideal as a textbook for classroom study, but its reach doesn't end there. The authors do a fine job of explaining each algorithm. (Reference sections on basic mathematical notation will help readers bridge the gap, but it will help to have some math background to appreciate the full achievement of this handsome hardcover volume.) Every algorithm is presented in pseudo-code, which can be implemented in any computer language, including C/C++ and Java. This ecumenical approach is one of the book's strengths. When it comes to sorting and common data structures, from basic linked lists to trees (including binary trees, red-black, and B-trees), this title really shines, with clear diagrams that show algorithms in operation. Even if you just glance over the mathematical notation here, you can definitely benefit from this text in other ways.<p>The book moves forward with more advanced algorithms that implement strategies for solving more complicated problems (including dynamic programming techniques, greedy algorithms, and amortized analysis). Algorithms for graphing problems (used in such real-world business problems as optimizing flight schedules or flow through pipelines) come next. In each case, the authors provide the best from current research in each topic, along with sample solutions.<p>This text closes with a grab bag of useful algorithms including matrix operations and linear programming, evaluating polynomials, and the well-known Fast Fourier Transformation (FFT) (useful in signal processing and engineering). Final sections on "NP-complete" problems, like the well-known traveling salesman problem, show off that while not all problems have a demonstrably final and best answer, algorithms that generate acceptable approximate solutions can still be used to generate useful, real-world answers.<p>Throughout this text, the authors anchor their discussion of algorithms with current examples drawn from molecular biology (like the Human Genome Project), business, and engineering. Each section ends with short discussions of related historical material, often discussing original research in each area of algorithms. On the whole, they argue successfully that algorithms are a "technology" just like hardware and software that can be used to write better software that does more, with better performance. Along with classic books on algorithms (like Donald Knuth's three-volume set, <I>The Art of Computer Programming</I>), this title sets a new standard for compiling the best research in algorithms. For any experienced developer, regardless of their chosen language, this text deserves a close look for extending the range and performance of real-world software. <I>--Richard Dragan</I> <p> <B>Topics covered:</B> Overview of algorithms (including algorithms as a technology); designing and analyzing algorithms; asymptotic notation; recurrences and recursion; probabilistic analysis and randomized algorithms; heapsort algorithms; priority queues; quicksort algorithms; linear time sorting (including radix and bucket sort); medians and order statistics (including minimum and maximum); introduction to data structures (stacks, queues, linked lists, and rooted trees); hash tables (including hash functions); binary search trees; red-black trees; augmenting data structures for custom applications; dynamic programming explained (including assembly-line scheduling, matrix-chain multiplication, and optimal binary search trees); greedy algorithms (including Huffman codes and task-scheduling problems); amortized analysis (the accounting and potential methods); advanced data structures (including B-trees, binomial and Fibonacci heaps, representing disjoint sets in data structures); graph algorithms (representing graphs, minimum spanning trees, single-source shortest paths, all-pairs shortest paths, and maximum flow algorithms); sorting networks; matrix operations; linear programming (standard and slack forms); polynomials and the Fast Fourier Transformation (FFT); number theoretic algorithms (including greatest common divisor, modular arithmetic, the Chinese remainder theorem, RSA public-key encryption, primality testing, integer factorization); string matching; computational geometry (including finding the convex hull); NP-completeness (including sample real-world NP-complete problems and their insolvability); approximation algorithms for NP-complete problems (including the traveling salesman problem); reference sections for summations and other mathematical notation, sets, relations, functions, graphs and trees, as well as counting and probability backgrounder (plus geometric and binomial distributions).}},
    author = {Cormen, T.H. and Leiserson, C.E. and Rivest, R.L. and Stein, C.},
    booktitle = {Introduction to Algorithms, Second Edition},
    day = {01},
    edition = {2nd},
    howpublished = {Hardcover},
    isbn = {0262032937},
    keywords = {algorithms, applied-mathematic, text-book},
    month = sep,
    posted-at = {2012-05-15 10:13:54},
    priority = {3},
    publisher = {The MIT Press},
    title = {{Introduction to Algorithms, Second Edition}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0262032937},
    year = {2001}
}

@book{ElementsStatisticalLearning,
    abstract = {{During the past decade there has been an explosion in computation and information technology. With it has come vast amounts of data in a variety of fields such as medicine, biology, finance, and marketing. The challenge of understanding these data has led to the development of new tools in the field of statistics, and spawned new areas such as data mining, machine learning, and bioinformatics. Many of these tools have common underpinnings but are often expressed with different terminology. This book descibes theimprtant ideas in these areas ina common conceptual framework. While the approach is statistical, the emphasis is on concepts rather than mathematics. Many examples are given, with a liberal use of color graphics. It should be a vluable resource for statisticians and anyone interested in data mining in science or industry. The book's coverage is broad, from supervised learing (prediction) to unsupervised learning. The many topics include neural networks, support vector machines, classification trees and boosting--the first comprehensive treatment of this topic in any book. Trevor Hastie, Robert Tibshirani, and Jerome Friedman are professors of statistics at Stanford University. They are prominent researchers in this area: Hastie and Tibshirani developed generalized additive models and wrote a popular book of that title. Hastie wrote much of the statistical modeling software in S-PLUS and invented principal curves and surfaces. Tibshirani proposed the Lasso and is co-author of the very successful An Introduction to the Bootstrap. Friedman is the co-inventor of many data-mining tools including CART, MARS, and projection pursuit.}},
    author = {Hastie, T. and Tibshirani, R. and Friedman, J.},
    booktitle = {The Elements of Statistical Learning},
    day = {30},
    edition = {Corrected},
    howpublished = {Hardcover},
    isbn = {0387952845},
    keywords = {learning},
    month = aug,
    posted-at = {2010-04-07 20:24:29},
    priority = {2},
    publisher = {Springer},
    title = {{The Elements of Statistical Learning: Data Mining, Inference, and Prediction}},
    url = {http://www.amazon.com/exec/obidos/redirect?tag=citeulike07-20\&path=ASIN/0387952845},
    year = {2003}
}

@book{CudaByExample,
 author = {Sanders, J. and Kandrot, E.},
 title = {CUDA by Example: An Introduction to General-Purpose GPU Programming},
 year = {2010},
 isbn = {0131387685, 9780131387683},
 edition = {1st},
 publisher = {Addison-Wesley Professional},
}

@article{ThreadsCannotBeImplementedAsALibrary,
 author = {Boehm, H.J.},
 title = {Threads cannot be implemented as a library},
 journal = {SIGPLAN Not.},
 issue_date = {June 2005},
 volume = {40},
 number = {6},
 month = jun,
 year = {2005},
 issn = {0362-1340},
 pages = {261--268},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1064978.1065042},
 doi = {10.1145/1064978.1065042},
 acmid = {1065042},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data race, optimization, pthreads, register promotion, threads},
}

@book{DragonBook,
 author = {Aho, A. and Lam, M. and Sethi, R. and Ullman, J.},
 title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
 year = {2006},
 isbn = {0321486811},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{ContinuousIntegration,
 author = {Duvall, P. and Matyas, S. and Glover, A.},
 title = {Continuous integration: improving software quality and reducing risk},
 year = {2007},
 isbn = {9780321336385},
 edition = {First},
 publisher = {Addison-Wesley Professional},
}

@book{ProGit,
 author = {Chacon, S.},
 title = {Pro Git},
 year = {2009},
 isbn = {1430218339, 9781430218333},
 edition = {1st},
 publisher = {Apress},
 address = {Berkely, CA, USA},
}

@book{Subversion,
 author = {Fitzpatrick, B. and Collins-Sussman, B. and Pilato, C.M.},
 title = {Gestion de projets avec Subversion},
 year = {2004},
 publisher = {O'Reilly}
}

@book{AMP,
 author = {Herlihy, M. and Shavit, N.},
 title = {The Art of Multiprocessor Programming},
 year = {2008},
 isbn = {0123705916, 9780123705914},
 publisher = {Morgan Kaufmann Publishers Inc.},
 address = {San Francisco, CA, USA},
}

@book{DesignPatterns,
 author = {Gamma, E. and Helm, R. and Johnson, R. and Vlissides, J.},
 title = {Design patterns: elements of reusable object-oriented software},
 year = {1995},
 isbn = {            0-201-63361-2      },
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
}

@book{MoreJoel,
 author = {Spolsky, J.},
 title = {More Joel on Software: Further Thoughts on Diverse and Occasionally Related Matters That Will Prove of Interest to Software Developers, Designers, and ... Luck, Work with Them in Some Capacity},
 year = {2008},
 isbn = {1430209879, 9781430209874},
 edition = {1},
 publisher = {Apress},
 address = {Berkely, CA, USA},
}

@book{JoelOnSoftware,
 author = {Spolsky, J.},
 title = {Joel on Software: Selected Essays},
 year = {2004},
 isbn = {1590593898},
 publisher = {APress},
}

@book{Joshi,
 author = {Joshi, M. S.},
 title = {C++ Design Patterns and Derivatives Pricing},
 year = {2008},
 isbn = {0521721628},
 edition = {2nd},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@book{Boost1,
 author = {Schling, B.},
 title = {The Boost C++ Libraries},
 year = {2011},
 isbn = {0982219199, 9780982219195},
 publisher = {XML Press},
}

@book{Boost2,
 author = {Demming, R. and Duffy, D.J.},
 title = {Introduction to the Boost C++ Libraries; Volume I - Foundations},
 year = {2010},
 isbn = {9491028014, 9789491028014},
 publisher = {Datasim Education BV},
 address = {The Netherlands},
}

@book{CombinatorialOptimization,
 author = {Korte, B. and Vygen, J.},
 title = {Combinatorial Optimization: Theory and Algorithms},
 year = {2012},
 isbn = {3642244874, 9783642244872},
 edition = {5th},
 publisher = {Springer Publishing Company, Incorporated},
}

@misc{StackOverflow,
    author = {Spalsky, J. and Atwood, J.},
    note = {\url{http://www.codinghorror.com}}
}

@book{MetaProgramming,
 author = {Abrahams, D. and Gurtovoy, A.},
 title = {C++ Template Metaprogramming: Concepts, Tools, and Techniques from Boost and Beyond (C++ in Depth Series)},
 year = {2004},
 isbn = {0321227255},
 publisher = {Addison-Wesley Professional},
}
